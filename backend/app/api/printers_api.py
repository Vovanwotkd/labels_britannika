"""
Printers API - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ç–µ—Ä–∞–º–∏
"""

import logging
from typing import List
from fastapi import APIRouter, Depends, HTTPException
from pydantic import BaseModel
from sqlalchemy.orm import Session

from app.core.database import get_db
from app.api.auth_api import require_auth
from app.models import User
from app.services.printer.cups_client import CUPSPrinterClient

logger = logging.getLogger(__name__)

router = APIRouter(prefix="/api/printers", tags=["printers"])


# ============================================================================
# SCHEMAS
# ============================================================================

class PrinterInfo(BaseModel):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–Ω—Ç–µ—Ä–µ"""
    name: str
    online: bool
    status: str


class PrintersListResponse(BaseModel):
    """–°–ø–∏—Å–æ–∫ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤"""
    printers: List[str]
    count: int


# ============================================================================
# ENDPOINTS
# ============================================================================

@router.get("/list", response_model=PrintersListResponse)
async def get_cups_printers(
    current_user: User = Depends(require_auth)
):
    """
    –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö CUPS –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤

    –¢—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤ –∏–∑ CUPS
        # host.docker.internal –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ö–æ—Å—Ç—É –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        printers = CUPSPrinterClient.list_printers(cups_server="host.docker.internal")

        logger.info(f"üìã –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ CUPS –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤: {printers}")

        return PrintersListResponse(
            printers=printers,
            count=len(printers)
        )

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤: {e}")
        raise HTTPException(status_code=500, detail=f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤: {str(e)}")


@router.get("/{printer_name}/status", response_model=PrinterInfo)
async def get_printer_status(
    printer_name: str,
    current_user: User = Depends(require_auth)
):
    """
    –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–∏–Ω—Ç–µ—Ä–∞

    –¢—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    """
    try:
        client = CUPSPrinterClient(
            printer_name=printer_name,
            cups_server="host.docker.internal"
        )

        status = client.get_printer_status()

        return PrinterInfo(
            name=status["printer_name"],
            online=status["online"],
            status=status["status"]
        )

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–Ω—Ç–µ—Ä–∞ {printer_name}: {e}")
        raise HTTPException(status_code=500, detail=f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {str(e)}")
