#!/usr/bin/env python3
"""
–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—ã –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ app –≤ PYTHONPATH
sys.path.insert(0, str(Path(__file__).parent.parent))

from app.core.database import Base, engine, SessionLocal
from app.core.security import hash_password
from app.models import User, Setting, Template


def init_tables():
    """–°–æ–∑–¥–∞—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã"""
    print("üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
    Base.metadata.create_all(bind=engine)
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")


def create_admin_user():
    """–°–æ–∑–¥–∞—Ç—å admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ admin
    existing_admin = db.query(User).filter(User.login == "admin").first()
    if existing_admin:
        print("‚ÑπÔ∏è  Admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        db.close()
        return

    # –°–æ–∑–¥–∞—ë–º admin
    admin = User(
        login="admin",
        password_hash=hash_password("admin"),  # –í–ê–ñ–ù–û: —Å–º–µ–Ω–∏—Ç—å –≤ production!
        role="admin"
    )
    db.add(admin)
    db.commit()

    print("‚úÖ Admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω (admin/admin)")
    print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –°–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞!")

    db.close()


def create_default_settings():
    """–°–æ–∑–¥–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    db = SessionLocal()

    settings = [
        Setting(
            key="printer_ip",
            value="192.168.1.10",
            description="IP –∞–¥—Ä–µ—Å –ø—Ä–∏–Ω—Ç–µ—Ä–∞ PC-365B"
        ),
        Setting(
            key="printer_port",
            value="9100",
            description="–ü–æ—Ä—Ç –ø—Ä–∏–Ω—Ç–µ—Ä–∞ (TCP)"
        ),
        Setting(
            key="sh5_sync_last",
            value=None,
            description="–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Store House 5"
        ),
        Setting(
            key="sh5_sync_error",
            value=None,
            description="–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"
        ),
        Setting(
            key="archive_enabled",
            value="true",
            description="–í–∫–ª—é—á–µ–Ω–∞ –ª–∏ –∞–≤—Ç–æ–∞—Ä—Ö–∏–≤–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤"
        ),
    ]

    for setting in settings:
        existing = db.query(Setting).filter(Setting.key == setting.key).first()
        if not existing:
            db.add(setting)

    db.commit()
    print("‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω—ã")
    db.close()


def create_default_template():
    """–°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ default —à–∞–±–ª–æ–Ω
    existing = db.query(Template).filter(Template.is_default == True).first()
    if existing:
        print("‚ÑπÔ∏è  Default —à–∞–±–ª–æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        db.close()
        return

    # –°–æ–∑–¥–∞—ë–º default —à–∞–±–ª–æ–Ω
    default_template = Template(
        name="Britannica Default",
        brand_id="default",
        is_default=True,
        config={
            "paper_width_mm": 60,
            "paper_height_mm": 60,
            "paper_gap_mm": 2,
            "shelf_life_hours": 6,
            "logo": {
                "enabled": False,
                "path": None,
                "x": 5,
                "y": 5,
                "width": 50,
                "height": 20
            },
            "title": {
                "font": "3",
                "x": 10,
                "y": 30,
                "max_width": 200
            },
            "weight_calories": {
                "font": "2",
                "x": 10,
                "y": 60
            },
            "bju": {
                "enabled": True,
                "font": "2",
                "x": 10,
                "y": 80
            },
            "ingredients": {
                "enabled": True,
                "font": "1",
                "x": 10,
                "y": 100,
                "max_lines": 3
            },
            "datetime_shelf": {
                "font": "2",
                "x": 10,
                "y": 140
            },
            "barcode": {
                "type": "128",
                "x": 10,
                "y": 170,
                "height": 50,
                "narrow_bar": 2
            },
            "qr": {
                "enabled": False,
                "x": 200,
                "y": 170,
                "size": 4
            }
        }
    )

    db.add(default_template)
    db.commit()
    print("‚úÖ Default —à–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω")
    db.close()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 70)
    print("BRITANNICA LABELS - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 70)
    print()

    # 1. –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã
    init_tables()

    # 2. –°–æ–∑–¥–∞—Ç—å admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    create_admin_user()

    # 3. –°–æ–∑–¥–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    create_default_settings()

    # 4. –°–æ–∑–¥–∞—Ç—å default —à–∞–±–ª–æ–Ω
    create_default_template()

    print()
    print("=" * 70)
    print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("=" * 70)
    print()
    print("–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä:")
    print("  cd backend")
    print("  python app/main.py")
    print()
    print("–õ–æ–≥–∏–Ω: admin")
    print("–ü–∞—Ä–æ–ª—å: admin")
    print()


if __name__ == "__main__":
    main()
