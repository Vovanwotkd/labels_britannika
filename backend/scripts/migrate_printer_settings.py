"""
Migration: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è CUPS –ø–µ—á–∞—Ç–∏

–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ –ø–æ–ª—è:
- printer_type: "tcp" –∏–ª–∏ "cups"
- printer_name: –∏–º—è CUPS –ø—Ä–∏–Ω—Ç–µ—Ä–∞ (–¥–ª—è type="cups")

–°—Ç–∞—Ä—ã–µ –ø–æ–ª—è (printer_ip, printer_port) —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ (type="tcp")
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ app
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from app.core.database import SessionLocal
from app.models import Setting
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def migrate():
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é"""
    db = SessionLocal()

    try:
        logger.info("üîÑ –ù–∞—á–∞–ª–æ –º–∏–≥—Ä–∞—Ü–∏–∏ printer settings...")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ printer_type
        existing_type = db.query(Setting).filter(Setting.key == "printer_type").first()

        if existing_type:
            logger.info("‚è≠Ô∏è  printer_type —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –º–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
            return

        # –î–æ–±–∞–≤–ª—è–µ–º printer_type (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "tcp" –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
        printer_type = Setting(
            key="printer_type",
            value="tcp",
            description="–¢–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø—Ä–∏–Ω—Ç–µ—Ä—É: 'tcp' (raw TSPL) –∏–ª–∏ 'cups' (–¥—Ä–∞–π–≤–µ—Ä)"
        )
        db.add(printer_type)

        # –î–æ–±–∞–≤–ª—è–µ–º printer_name (–ø—É—Å—Ç–æ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è CUPS)
        printer_name = Setting(
            key="printer_name",
            value="",
            description="–ò–º—è CUPS –ø—Ä–∏–Ω—Ç–µ—Ä–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ printer_type=cups)"
        )
        db.add(printer_name)

        db.commit()

        logger.info("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        logger.info("   –î–æ–±–∞–≤–ª–µ–Ω–æ:")
        logger.info("   - printer_type = 'tcp'")
        logger.info("   - printer_name = ''")
        logger.info("")
        logger.info("   –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (printer_ip, printer_port) —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        db.rollback()
        raise
    finally:
        db.close()


if __name__ == "__main__":
    migrate()
    print("\n–ì–æ—Ç–æ–≤–æ! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ backend —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è.")
